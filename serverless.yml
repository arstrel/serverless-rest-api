service: serverless-rest-api-with-dynamodb

frameworkVersion: '>=1.1.0 <2.0.0'

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev
  profile: serverless-admin
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    USERS_TABLE: users-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'
        - 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}'

functions:
  createTodo:
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true

  listTodos:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true

  getTodo:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  updateTodo:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true

  deleteTodo:
    handler: todos/delete.delete
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

  createUser:
    handler: users/create.create
    events:
      - http:
          path: users
          method: post
          cors: true

  listUsers:
    handler: users/list.list
    events:
      - http:
          path: users
          method: get
          cors: true

  getUser:
    handler: users/get.get
    events:
      - http:
          path: users/{id}
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
        TableName: '${self:provider.environment.DYNAMODB_TABLE}'
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
        TableName: '${self:provider.environment.USERS_TABLE}'
